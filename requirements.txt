"""
Configuration constants for the snake AI system.
Centralizes all magic numbers for easy tuning.
"""

from dataclasses import dataclass
from enum import Enum


class AIPersonality(Enum):
    """AI behavior personalities"""
    AGGRESSIVE = "aggressive"
    DEFENSIVE = "defensive"
    BALANCED = "balanced"


@dataclass(frozen=True)
class GameConfig:
    """Game world configuration"""
    WIDTH: int = 60
    HEIGHT: int = 20
    INITIAL_FOOD_COUNT: int = 5
    MAX_ROUNDS: int = 800
    GAME_UPDATE_INTERVAL: float = 0.12  # seconds
    AI_DECISION_INTERVAL: float = 0.12  # synchronized with game updates


@dataclass(frozen=True)
class AIConfig:
    """AI behavior configuration"""
    
    # Look-ahead depth
    SIMULATION_DEPTH: int = 3  # How many moves to simulate ahead
    
    # Space evaluation
    FLOOD_FILL_MAX_DEPTH: int = 12
    SPACE_WEIGHT: float = 1.0
    TEMPORAL_DISCOUNT: float = 0.9  # Discount factor for future space value
    
    # Food evaluation
    FOOD_BASE_VALUE: float = 50.0
    FOOD_DISTANCE_DECAY: float = 0.85  # Exponential decay per distance unit
    
    # Danger evaluation
    DANGER_RADIUS: int = 3
    DANGER_BASE_PENALTY: float = 30.0
    
    # Snake comparison thresholds
    LENGTH_ADVANTAGE_THRESHOLD: int = 3  # Must be this much longer to be aggressive
    
    # Pathfinding
    ASTAR_MAX_NODES: int = 500  # Limit A* exploration for performance
    PATH_CACHE_DURATION: int = 3  # Frames to cache a path
    
    # Personality modifiers
    AGGRESSIVE_RISK_TOLERANCE: float = 0.7  # Lower = more risk-taking
    DEFENSIVE_RISK_TOLERANCE: float = 1.5   # Higher = more cautious
    BALANCED_RISK_TOLERANCE: float = 1.0
    
    # Probabilistic prediction
    PREDICTION_DEPTH: int = 5  # How many steps to predict opponent moves
    PREDICTION_BRANCH_LIMIT: int = 3  # Max branches to consider per step
    
    # Meta-strategy
    SCORE_LEAD_THRESHOLD: int = 50  # Score difference to trigger defensive play
    TIME_PRESSURE_THRESHOLD: int = 100  # Frames remaining to trigger urgency


@dataclass(frozen=True)
class DisplayConfig:
    """Visual display configuration"""
    COLORS = {
        'red': '\033[91m',
        'green': '\033[92m',
        'blue': '\033[94m',
        'yellow': '\033[93m',
        'gray': '\033[90m',
        'cyan': '\033[96m',
        'magenta': '\033[95m',
        'reset': '\033[0m'
    }
    
    SYMBOLS = {
        'snake_head': '█',
        'snake_body': '●',
        'food': '●',
        'border_h': '═',
        'border_v': '║',
        'corner_tl': '╔',
        'corner_tr': '╗',
        'corner_bl': '╚',
        'corner_br': '╝',
        'danger_zone': '×',
        'path_marker': '·',
    }


@dataclass(frozen=True)
class DebugConfig:
    """Debug visualization configuration"""
    SHOW_DANGER_ZONES: bool = False
    SHOW_PATHS: bool = False
    SHOW_EVALUATION_SCORES: bool = False
    LOG_DECISIONS: bool = True
    LOG_LEVEL: str = "INFO"  # DEBUG, INFO, WARNING, ERROR


# Global singletons
GAME_CONFIG = GameConfig()
AI_CONFIG = AIConfig()
DISPLAY_CONFIG = DisplayConfig()
DEBUG_CONFIG = DebugConfig()